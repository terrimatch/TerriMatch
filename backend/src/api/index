// backend/src/api/index.js
import express from 'express';
import cors from 'cors';
import dotenv from 'dotenv';
import { createServer } from 'http';
import { Server } from 'socket.io';
import authRoutes from './auth/routes.js';
import chatRoutes from './chat/routes.js';
import matchesRoutes from './matches/routes.js';
import profilesRoutes from './profiles/routes.js';
import telegramRoutes from './telegram/routes.js';

dotenv.config();

const app = express();
const httpServer = createServer(app);
const io = new Server(httpServer, {
  cors: {
    origin: process.env.FRONTEND_URL || 'http://localhost:3000',
    methods: ['GET', 'POST']
  }
});

app.use(cors());
app.use(express.json());

// Базовые роуты API
app.use('/api/auth', authRoutes);
app.use('/api/chat', chatRoutes);
app.use('/api/matches', matchesRoutes);
app.use('/api/profiles', profilesRoutes);
app.use('/api/telegram', telegramRoutes);

// Проверка здоровья для Vercel
app.get('/api/health', (req, res) => {
  res.json({ status: 'ok', timestamp: new Date().toISOString() });
});

const PORT = process.env.PORT || 3001;

httpServer.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});

export default app;
